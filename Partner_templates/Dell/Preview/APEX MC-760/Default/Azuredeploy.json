{
  "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
      "networkingType": {
            "defaultValue": "switchedMultiServerDeployment",
            "type": "string",
            "allowedValues": [
                "switchedMultiServerDeployment",
                "switchlessMultiServerDeployment",
                "singleServerDeployment"
              ],
            "metadata": {
                "description": "The networking type for deploying a hci cluster"
            }
        },
      "networkingPattern": {
            "defaultValue": "hyperConverged",
            "type": "string",
            "allowedValues": [
              "hyperConverged",
              "convergedManagementCompute",
              "managementComputeOnly",
              "custom"
            ],
            "metadata": {
                "description": "The networking pattern for deploying a hci cluster"
            }
      },
      "securityLevel": {
        "defaultValue": "Recommended",
        "type": "string",
        "allowedValues": [
            "Recommended",
            "Customized"
        ],
        "metadata": {
            "description": "The security level data for deploying a hci cluster"
        }
      },
      "keyVaultName": {
        "type": "string",
        "metadata": {
            "description": "The KeyVault name used to store the secrets."
        }
      },
      "useDhcp": {
          "type": "bool",
          "allowedValues": [
              true,
              false
          ],
          "defaultValue": false,
          "metadata": {
              "description": "Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required"
          }
      },
      "enableStorageAutoIp": {
          "defaultvalue": true,
          "type": "bool",
          "allowedValues": [
              true,
              false
          ],
          "metadata": {
              "description": "The enable storage auto ip value for deploying a hci cluster"
          }
      },
      "witnessPath":{
          "defaultValue":"",
          "type":"String"
      },
      "witnessType": {
        "defaultValue": "No Witness",
        "type": "string",
        "allowedValues": [
            "Cloud",
            "No Witness"
        ],
        "metadata": {
            "description": "Witness Type must be 'cloud' for a 2 node cluster. It can  be empty of other cluster sizes"
        }
      },
      "deploymentMode":{
          "defaultValue":"Validate",
          "type":"string",
          "allowedValues":[
              "Validate",
              "Deploy"
          ],
          "metadata":{
              "description":"First must pass Validate prior running Deploy"
          }
      },
     "clusterWitnessStorageAccountName": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
            "description":"The existing storage account name used for the cluster witness"
        }
      },
    "localAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "local administrator username"
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "local administrator password"
      }
    },
    "AzureStackLCMAdminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Deployment user username"
      }
    },
    "AzureStackLCMAdminPasssword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Deployment user password"
      }
    },
    "arbDeploymentAppID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's AppID"
      }
    },
    "arbDeploymentAppSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's Password"
      }
     },
      "clusterName":{
          "type":"string",
          "minLength":3,
          "maxLength":24
      },
      "location":{
          "type":"string",
          "defaultValue":"[resourceGroup().location]"
      },
      "apiVersion":{
          "defaultValue":"2024-04-01",
          "type":"string",
          "metadata":{
              "description":"The api version for deploying a hci cluster"
          }
      },
      "arcNodeResourceIds":{
          "defaultValue":[],
          "type":"array",
          "metadata":{
              "description":"The arc for server node Ids of the hci cluster"
          }
      },
      "domainFqdn":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The domain name of the Active Directory Domain Services"
          }
      },
      "namingPrefix":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The ADFS name prefix"
          }
      },
      "adouPath":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The ADDS OU path"
          }
      },
      "driftControlEnforced":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The security setting driftControlEnforced data for deploying a hci cluster"
          }
      },
      "credentialGuardEnforced":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The security setting credentialGuardEnforced data for deploying a hci cluster"
          }
      },
      "smbSigningEnforced":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The security setting smbSigningEnforced data for deploying a hci cluster"
          }
      },
      "smbClusterEncryption":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The security setting smbClusterEncryption data for deploying a hci cluster"
          }
      },
      "bitlockerBootVolume":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The security setting bitlockerBootVolume data for deploying a hci cluster"
          }
      },
      "bitlockerDataVolumes":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The security setting bitlockerDataVolumes data for deploying a hci cluster"
          }
      },
      "wdacEnforced":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The security setting wdacEnforced data for deploying a hci cluster"
          }
      },
      "streamingDataClient":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The metrics data for deploying a hci cluster"
          }
      },
      "euLocation":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The location data for deploying a hci cluster"
          }
      },
      "episodicDataUpload":{
          "defaultValue":true,
          "type":"bool",
          "allowedValues":[
              true,
              false
          ],
          "metadata":{
              "description":"The diagnostic data for deploying a hci cluster"
          }
      },
      "configurationMode":{
          "defaultValue":"Express",
          "type":"string",
          "allowedValues":[
              "Express",
              "InfraOnly",
              "KeepStorage"
          ],
          "metadata":{
              "description":"The storage volume configuration mode"
          }
      },
      "subnetMask":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The subnet mask for deploying a hci cluster"
          }
      },
      "defaultGateway":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The default gateway for deploying a hci cluster"
          }
      },
      "startingIPAddress":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The starting ip address for deploying a hci cluster"
          }
      },
      "endingIPAddress":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The ending ip address for deploying a hci cluster"
          }
      },
      "dnsServers":{
          "defaultValue":[
              ""
          ],
          "type":"array",
          "metadata":{
              "description":"The dns servers for deploying a hci cluster"
          }
      },
      "physicalNodesSettings":{
          "defaultValue":[
              {
                "name": "node1",
                "ipv4Address": "100.69.32.64"
              },
              {
                "name": "node2",
                "ipv4Address": "100.69.32.65"
              }
          ],
          "type":"array",
          "metadata":{
              "description":"The physical nodes settings for deploying a hci cluster"
          }
      },
      "intentList":{
          "defaultValue":[],
          "type":"array",
          "metadata":{
              "description":"The intent list for deploying a hci cluster"
          }
      },
      "storageNetworkList":{
          "defaultValue":[],
          "type":"array",
          "metadata":{
              "description":"The storage network list for deploying a hci cluster"
          }
      },
      "storageConnectivitySwitchless":{
          "defaultValue":false,
          "type":"bool",
          "metadata":{
              "description":"The storage connectivity switchless value for deploying a hci cluster"
          }
      },
      "customLocation":{
          "defaultValue":"",
          "type":"string",
          "metadata":{
              "description":"The custom location for deploying a hci cluster"
          }
      }
  },
  "variables": {
    "storageWitnessNameVar": "WitnessStorageKey",
    "LocalAdminCredentialSecretName": "LocalAdminCredential",
    "domainAdminSecretName": "AzureStackLCMUserCredential",
    "arbDeploymentSpnSecretName": "DefaultARBApplication",
    "secretsLocationVar": "[concat('https://',parameters('keyVaultName'), '.vault.azure.net')]",
    "witnessTypeVar": "[if(equals(parameters('witnessType'), 'No Witness'), '','Cloud')]",
    "clusterWitnessStorageAccountNameVar": "[if(equals(parameters('witnessType'), 'No Witness'), '', parameters('clusterWitnessStorageAccountName'))]",
    "AzureServiceEndpointVar": "[if(equals(parameters('witnessType'), 'No Witness'), '', 'core.windows.net')]",
    "localAdminSecretValue": "[base64(concat(parameters('localAdminUserName'),':',parameters('localAdminPassword')))]",
    "domainAdminSecretValueVar": "[base64(concat(parameters('AzureStackLCMAdminUsername'),':',parameters('AzureStackLCMAdminPasssword')))]",
    "arbDeploymentSpnValueVar": "[base64(concat(parameters('arbDeploymentAppID'),':',parameters('arbDeploymentAppSecret')))]",
    "CloudWithnessStorageAccountIdVar": "[resourceId('Microsoft.Storage/storageAccounts', parameters('clusterWitnessStorageAccountName'))]"

  },
  "resources":[
      {
          "condition":"[equals(parameters('deploymentMode'), 'Validate')]",
          "type":"Microsoft.AzureStackHCI/clusters",
          "apiVersion":"2023-08-01-preview",
          "name":"[parameters('clusterName')]",
          "identity":{
              "type":"SystemAssigned"
          },
          "location":"[parameters('location')]",
          "properties":{

          }
      },
          {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('domainAdminSecretName'))]",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('domainAdminSecretValueVar')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('LocalAdminCredentialSecretName'))]",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('localAdminSecretValue')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('arbDeploymentSpnSecretName'))]",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('arbDeploymentSpnValueVar')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "condition": "[equals(toLower(parameters('witnessType')), 'cloud')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('storageWitnessNameVar'))]",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[base64(listKeys(variables('CloudWithnessStorageAccountIdVar'), '2019-04-01').keys[0].value)]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
          "type":"microsoft.azurestackhci/clusters/deploymentSettings",
          "apiVersion":"[parameters('apiVersion')]",
          "name":"[format('{0}/default', parameters('clusterName'))]",
          "dependsOn":[
              "[resourceId('Microsoft.AzureStackHCI/clusters', parameters('clusterName'))]"
          ],
          "properties":{
              "arcNodeResourceIds":"[parameters('arcNodeResourceIds')]",
              "deploymentMode":"[parameters('deploymentMode')]",
              "deploymentConfiguration":{
                  "version":"10.0.0.0",
                  "scaleUnits":[
                      {
                          "deploymentData":{
                              "securitySettings":{
                                  "hvciProtection":true,
                                  "drtmProtection":true,
                                  "driftControlEnforced":"[parameters('driftControlEnforced')]",
                                  "credentialGuardEnforced":"[parameters('credentialGuardEnforced')]",
                                  "smbSigningEnforced":"[parameters('smbSigningEnforced')]",
                                  "smbClusterEncryption":"[parameters('smbClusterEncryption')]",
                                  "sideChannelMitigationEnforced":true,
                                  "bitlockerBootVolume":"[parameters('bitlockerBootVolume')]",
                                  "bitlockerDataVolumes":"[parameters('bitlockerDataVolumes')]",
                                  "wdacEnforced":"[parameters('wdacEnforced')]"
                              },
                              "observability":{
                                  "streamingDataClient":"[parameters('streamingDataClient')]",
                                  "euLocation":"[parameters('euLocation')]",
                                  "episodicDataUpload":"[parameters('episodicDataUpload')]"
                              },
                              "cluster":{
                                  "name":"[parameters('clusterName')]",
                                  "witnessType": "[variables('witnessTypeVar')]",
                                  "witnessPath": "[if(equals(parameters('witnessType'), 'FileShare'), parameters('witnessPath'), '')]",
                                  "cloudAccountName": "[variables('clusterWitnessStorageAccountNameVar')]",
                                  "azureServiceEndpoint": "[variables('AzureServiceEndpointVar')]"
                              },
                              "storage":{
                                  "configurationMode":"[parameters('configurationMode')]"
                              },
                              "namingPrefix":"[parameters('namingPrefix')]",
                              "domainFqdn":"[parameters('domainFqdn')]",
                              "infrastructureNetwork":[
                                  {
                                      "subnetMask":"[parameters('subnetMask')]",
                                      "gateway":"[parameters('defaultGateway')]",
                                      "ipPools":[
                                          {
                                              "startingAddress":"[parameters('startingIPAddress')]",
                                              "endingAddress":"[parameters('endingIPAddress')]"
                                          }
                                      ],
                                      "dnsServers":"[parameters('dnsServers')]",
                                      "useDhcp": "[parameters('useDhcp')]"
                                  }
                              ],
                              "physicalNodes":"[parameters('physicalNodesSettings')]",
                              "hostNetwork":{
                                  "intents":"[parameters('intentList')]",
                                  "storageNetworks":"[parameters('storageNetworkList')]",
                                  "storageConnectivitySwitchless":"[parameters('storageConnectivitySwitchless')]",
                                  "enableStorageAutoIp": "[parameters('enableStorageAutoIp')]"
                              },
                              "adouPath":"[parameters('adouPath')]",
                              "secretsLocation": "[variables('secretsLocationVar')]",
                              "optionalServices":{
                                  "customLocation":"[parameters('customLocation')]"
                              }
                          }
                      }
                  ]
              }
          }
      }
  ]
}
